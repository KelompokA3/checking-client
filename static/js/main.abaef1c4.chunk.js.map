{"version":3,"sources":["_actions/types.js","components/Config.js","hoc/auth.js","_actions/user_actions.js","components/views/LandingPage/LandingPage.js","components/views/LoginPage/LoginPage.js","components/views/RegisterPage/RegisterPage.js","components/views/NavBar/Sections/LeftMenu.js","components/views/NavBar/Sections/RightMenu.js","components/views/NavBar/NavBar.js","components/views/Footer/Footer.js","components/App.js","serviceWorker.js","_reducers/user_reducer.js","_reducers/index.js","index.js"],"names":["LOGIN_USER","REGISTER_USER","AUTH_USER","LOGOUT_USER","USER_SERVER","hoc_auth","ComposedClass","reload","adminRoute","arguments","length","undefined","props","user","useSelector","state","dispatch","useDispatch","useEffect","request","axios","get","concat","then","response","data","type","payload","auth","isAuth","isAdmin","history","push","react_default","a","createElement","Object","assign","LandingPage","Fragment","className","index_esm","style","fontSize","float","Title","Typography","withRouter","rememberMeChecked","localStorage","getItem","_useState","useState","_useState2","slicedToArray","formErrorMessage","setFormErrorMessage","_useState3","_useState4","rememberMe","setRememberMe","handleRememberMe","initialEmail","formik_esm","initialValues","email","password","validationSchema","Yup","shape","required","min","onSubmit","values","_ref","setSubmitting","setTimeout","dataToSubmit","post","loginUser","loginSuccess","window","setItem","userId","id","removeItem","catch","err","touched","errors","isSubmitting","dirty","handleChange","handleBlur","handleSubmit","handleReset","level","width","es_form","Item","input","prefix","icon","color","placeholder","value","onChange","onBlur","border","padding","borderRadius","es_checkbox","checked","href","es_button","htmlType","minWidth","disabled","formItemLayout","labelCol","xs","span","sm","wrapperCol","tailFormItemLayout","offset","RegisterPage","lastName","name","confirmPassword","oneOf","lastname","image","moment","unix","registerUser","success","alert","errmsg","label","hasFeedback","validateStatus","onClick","SubMenu","Menu","MenuItemGroup","ItemGroup","LeftMenu","menu","mode","key","title","userData","status","NavBar","visible","setVisible","position","zIndex","Sections_LeftMenu","Sections_RightMenu","drawer","placement","closable","onClose","Footer","height","display","flexDirection","alignItems","justifyContent","App","react","fallback","NavBar_NavBar","paddingTop","minHeight","react_router","exact","path","component","Auth","LoginPage","Footer_Footer","Boolean","location","hostname","match","rootReducer","combineReducers","action","_objectSpread","register","loginSucces","createStoreWithMiddleware","applyMiddleware","promiseMiddleware","ReduxThunk","createStore","ReactDOM","render","es","store","Reducer","__REDUX_DEVTOOLS_EXTENSION__","react_router_dom","components_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.abaef1c4.chunk.js","sourcesContent":["export const LOGIN_USER = 'login_user';\nexport const REGISTER_USER = 'register_user';\nexport const AUTH_USER = 'auth_user';\nexport const LOGOUT_USER = 'logout_user';\n","//SERVER ROUTES\nexport const USER_SERVER = '/api/users';\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useEffect } from 'react';\nimport { auth } from '../_actions/user_actions';\nimport { useSelector, useDispatch } from \"react-redux\";\n\nexport default function (ComposedClass, reload, adminRoute = null) {\n    function AuthenticationCheck(props) {\n\n        let user = useSelector(state => state.user);\n        const dispatch = useDispatch();\n\n        useEffect(() => {\n\n            dispatch(auth()).then(response => {\n                if (!response.payload.isAuth) {\n                    if (reload) {\n                        props.history.push('/login')\n                    }\n                } else {\n                    if (adminRoute && !response.payload.isAdmin) {\n                        props.history.push('/')\n                    }\n                    else {\n                        if (reload === false) {\n                            props.history.push('/')\n                        }\n                    }\n                }\n            })\n            \n        }, [])\n\n        return (\n            <ComposedClass {...props} user={user} />\n        )\n    }\n    return AuthenticationCheck\n}\n\n\n","import axios from 'axios';\nimport {\n    LOGIN_USER,\n    REGISTER_USER,\n    AUTH_USER,\n    LOGOUT_USER,\n} from './types';\nimport { USER_SERVER } from '../components/Config.js';\n\nexport function registerUser(dataToSubmit){\n    const request = axios.post(`${USER_SERVER}/register`,dataToSubmit)\n        .then(response => response.data);\n    \n    return {\n        type: REGISTER_USER,\n        payload: request\n    }\n}\n\nexport function loginUser(dataToSubmit){\n    const request = axios.post(`${USER_SERVER}/login`,dataToSubmit)\n                .then(response => response.data);\n\n    return {\n        type: LOGIN_USER,\n        payload: request\n    }\n}\n\nexport function auth(){\n    const request = axios.get(`${USER_SERVER}/auth`)\n    .then(response => response.data);\n\n    return {\n        type: AUTH_USER,\n        payload: request\n    }\n}\n\nexport function logoutUser(){\n    const request = axios.get(`${USER_SERVER}/logout`)\n    .then(response => response.data);\n\n    return {\n        type: LOGOUT_USER,\n        payload: request\n    }\n}\n\n","import React from 'react'\nimport { FaCode } from \"react-icons/fa\";\n\nfunction LandingPage() {\n    return (\n        <>\n        <div className=\"app\">\n            <FaCode style={{ fontSize: '4rem' }} /><br />\n            <span style={{ fontSize: '2rem' }}>Let's Start Coding!</span>\n        </div>\n        <div style={{ float:'right' }}>Thanks For Using This Boiler Plate by John Ahn</div>\n        </>\n    )\n}\n\nexport default LandingPage\n","import React, { useState } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { loginUser } from \"../../../_actions/user_actions\";\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { Form, Icon, Input, Button, Checkbox, Typography } from 'antd';\nimport { useDispatch } from \"react-redux\";\n\nconst { Title } = Typography;\n\nfunction LoginPage(props) {\n  const dispatch = useDispatch();\n  const rememberMeChecked = localStorage.getItem(\"rememberMe\") ? true : false;\n\n  const [formErrorMessage, setFormErrorMessage] = useState('')\n  const [rememberMe, setRememberMe] = useState(rememberMeChecked)\n\n  const handleRememberMe = () => {\n    setRememberMe(!rememberMe)\n  };\n\n  const initialEmail = localStorage.getItem(\"rememberMe\") ? localStorage.getItem(\"rememberMe\") : '';\n\n  return (\n    <Formik\n      initialValues={{\n        email: initialEmail,\n        password: '',\n      }}\n      validationSchema={Yup.object().shape({\n        email: Yup.string()\n          .email('Email is invalid')\n          .required('Email is required'),\n        password: Yup.string()\n          .min(6, 'Password must be at least 6 characters')\n          .required('Password is required'),\n      })}\n      onSubmit={(values, { setSubmitting }) => {\n        setTimeout(() => {\n          let dataToSubmit = {\n            email: values.email,\n            password: values.password\n          };\n\n          dispatch(loginUser(dataToSubmit))\n            .then(response => {\n              if (response.payload.loginSuccess) {\n                window.localStorage.setItem('userId', response.payload.userId);\n                if (rememberMe === true) {\n                  window.localStorage.setItem('rememberMe', values.id);\n                } else {\n                  localStorage.removeItem('rememberMe');\n                }\n                props.history.push(\"/\");\n              } else {\n                setFormErrorMessage('Check out your Account or Password again')\n              }\n            })\n            .catch(err => {\n              setFormErrorMessage('Check out your Account or Password again')\n              setTimeout(() => {\n                setFormErrorMessage(\"\")\n              }, 3000);\n            });\n          setSubmitting(false);\n        }, 500);\n      }}\n    >\n      {props => {\n        const {\n          values,\n          touched,\n          errors,\n          dirty,\n          isSubmitting,\n          handleChange,\n          handleBlur,\n          handleSubmit,\n          handleReset,\n        } = props;\n        return (\n          <div className=\"app\">\n\n            <Title level={2}>Log In</Title>\n            <form onSubmit={handleSubmit} style={{ width: '350px' }}>\n\n              <Form.Item required>\n                <Input\n                  id=\"email\"\n                  prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                  placeholder=\"Enter your email\"\n                  type=\"email\"\n                  value={values.email}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.email && touched.email ? 'text-input error' : 'text-input'\n                  }\n                />\n                {errors.email && touched.email && (\n                  <div className=\"input-feedback\">{errors.email}</div>\n                )}\n              </Form.Item>\n\n              <Form.Item required>\n                <Input\n                  id=\"password\"\n                  prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                  placeholder=\"Enter your password\"\n                  type=\"password\"\n                  value={values.password}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.password && touched.password ? 'text-input error' : 'text-input'\n                  }\n                />\n                {errors.password && touched.password && (\n                  <div className=\"input-feedback\">{errors.password}</div>\n                )}\n              </Form.Item>\n\n              {formErrorMessage && (\n                <label ><p style={{ color: '#ff0000bf', fontSize: '0.7rem', border: '1px solid', padding: '1rem', borderRadius: '10px' }}>{formErrorMessage}</p></label>\n              )}\n\n              <Form.Item>\n                <Checkbox id=\"rememberMe\" onChange={handleRememberMe} checked={rememberMe} >Remember me</Checkbox>\n                <a className=\"login-form-forgot\" href=\"/reset_user\" style={{ float: 'right' }}>\n                  forgot password\n                  </a>\n                <div>\n                  <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\" style={{ minWidth: '100%' }} disabled={isSubmitting} onSubmit={handleSubmit}>\n                    Log in\n                </Button>\n                </div>\n                Or <a href=\"/register\">register now!</a>\n              </Form.Item>\n            </form>\n          </div>\n        );\n      }}\n    </Formik>\n  );\n};\n\nexport default withRouter(LoginPage);\n\n\n","import React from \"react\";\nimport moment from \"moment\";\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { registerUser } from \"../../../_actions/user_actions\";\nimport { useDispatch } from \"react-redux\";\n\nimport {\n  Form,\n  Input,\n  Button,\n} from 'antd';\n\nconst formItemLayout = {\n  labelCol: {\n    xs: { span: 24 },\n    sm: { span: 8 },\n  },\n  wrapperCol: {\n    xs: { span: 24 },\n    sm: { span: 16 },\n  },\n};\nconst tailFormItemLayout = {\n  wrapperCol: {\n    xs: {\n      span: 24,\n      offset: 0,\n    },\n    sm: {\n      span: 16,\n      offset: 8,\n    },\n  },\n};\n\nfunction RegisterPage(props) {\n  const dispatch = useDispatch();\n  return (\n\n    <Formik\n      initialValues={{\n        email: '',\n        lastName: '',\n        name: '',\n        password: '',\n        confirmPassword: ''\n      }}\n      validationSchema={Yup.object().shape({\n        name: Yup.string()\n          .required('Name is required'),\n        lastName: Yup.string()\n          .required('Last Name is required'),\n        email: Yup.string()\n          .email('Email is invalid')\n          .required('Email is required'),\n        password: Yup.string()\n          .min(6, 'Password must be at least 6 characters')\n          .required('Password is required'),\n        confirmPassword: Yup.string()\n          .oneOf([Yup.ref('password'), null], 'Passwords must match')\n          .required('Confirm Password is required')\n      })}\n      onSubmit={(values, { setSubmitting }) => {\n        setTimeout(() => {\n\n          let dataToSubmit = {\n            email: values.email,\n            password: values.password,\n            name: values.name,\n            lastname: values.lastname,\n            image: `http://gravatar.com/avatar/${moment().unix()}?d=identicon`\n          };\n\n          dispatch(registerUser(dataToSubmit)).then(response => {\n            if (response.payload.success) {\n              props.history.push(\"/login\");\n            } else {\n              alert(response.payload.err.errmsg)\n            }\n          })\n\n          setSubmitting(false);\n        }, 500);\n      }}\n    >\n      {props => {\n        const {\n          values,\n          touched,\n          errors,\n          dirty,\n          isSubmitting,\n          handleChange,\n          handleBlur,\n          handleSubmit,\n          handleReset,\n        } = props;\n        return (\n          <div className=\"app\">\n            <h2>Sign up</h2>\n            <Form style={{ minWidth: '375px' }} {...formItemLayout} onSubmit={handleSubmit} >\n\n              <Form.Item required label=\"Name\">\n                <Input\n                  id=\"name\"\n                  placeholder=\"Enter your name\"\n                  type=\"text\"\n                  value={values.name}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.name && touched.name ? 'text-input error' : 'text-input'\n                  }\n                />\n                {errors.name && touched.name && (\n                  <div className=\"input-feedback\">{errors.name}</div>\n                )}\n              </Form.Item>\n\n              <Form.Item required label=\"Last Name\">\n                <Input\n                  id=\"lastName\"\n                  placeholder=\"Enter your Last Name\"\n                  type=\"text\"\n                  value={values.lastName}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.lastName && touched.lastName ? 'text-input error' : 'text-input'\n                  }\n                />\n                {errors.lastName && touched.lastName && (\n                  <div className=\"input-feedback\">{errors.lastName}</div>\n                )}\n              </Form.Item>\n\n              <Form.Item required label=\"Email\" hasFeedback validateStatus={errors.email && touched.email ? \"error\" : 'success'}>\n                <Input\n                  id=\"email\"\n                  placeholder=\"Enter your Email\"\n                  type=\"email\"\n                  value={values.email}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.email && touched.email ? 'text-input error' : 'text-input'\n                  }\n                />\n                {errors.email && touched.email && (\n                  <div className=\"input-feedback\">{errors.email}</div>\n                )}\n              </Form.Item>\n\n              <Form.Item required label=\"Password\" hasFeedback validateStatus={errors.password && touched.password ? \"error\" : 'success'}>\n                <Input\n                  id=\"password\"\n                  placeholder=\"Enter your password\"\n                  type=\"password\"\n                  value={values.password}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.password && touched.password ? 'text-input error' : 'text-input'\n                  }\n                />\n                {errors.password && touched.password && (\n                  <div className=\"input-feedback\">{errors.password}</div>\n                )}\n              </Form.Item>\n\n              <Form.Item required label=\"Confirm\" hasFeedback>\n                <Input\n                  id=\"confirmPassword\"\n                  placeholder=\"Enter your confirmPassword\"\n                  type=\"password\"\n                  value={values.confirmPassword}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.confirmPassword && touched.confirmPassword ? 'text-input error' : 'text-input'\n                  }\n                />\n                {errors.confirmPassword && touched.confirmPassword && (\n                  <div className=\"input-feedback\">{errors.confirmPassword}</div>\n                )}\n              </Form.Item>\n\n              <Form.Item {...tailFormItemLayout}>\n                <Button onClick={handleSubmit} type=\"primary\" disabled={isSubmitting}>\n                  Submit\n                </Button>\n              </Form.Item>\n            </Form>\n          </div>\n        );\n      }}\n    </Formik>\n  );\n};\n\n\nexport default RegisterPage\n","import React from 'react';\nimport { Menu } from 'antd';\nconst SubMenu = Menu.SubMenu;\nconst MenuItemGroup = Menu.ItemGroup;\n\nfunction LeftMenu(props) {\n  return (\n    <Menu mode={props.mode}>\n    <Menu.Item key=\"mail\">\n      <a href=\"/\">Home</a>\n    </Menu.Item>\n    <SubMenu title={<span>Blogs</span>}>\n      <MenuItemGroup title=\"Item 1\">\n        <Menu.Item key=\"setting:1\">Option 1</Menu.Item>\n        <Menu.Item key=\"setting:2\">Option 2</Menu.Item>\n      </MenuItemGroup>\n      <MenuItemGroup title=\"Item 2\">\n        <Menu.Item key=\"setting:3\">Option 3</Menu.Item>\n        <Menu.Item key=\"setting:4\">Option 4</Menu.Item>\n      </MenuItemGroup>\n    </SubMenu>\n  </Menu>\n  )\n}\n\nexport default LeftMenu","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React from 'react';\nimport { Menu } from 'antd';\nimport axios from 'axios';\nimport { USER_SERVER } from '../../../Config';\nimport { withRouter } from 'react-router-dom';\nimport { useSelector } from \"react-redux\";\n\nfunction RightMenu(props) {\n  const user = useSelector(state => state.user)\n\n  const logoutHandler = () => {\n    axios.get(`${USER_SERVER}/logout`).then(response => {\n      if (response.status === 200) {\n        props.history.push(\"/login\");\n      } else {\n        alert('Log Out Failed')\n      }\n    });\n  };\n\n  if (user.userData && !user.userData.isAuth) {\n    return (\n      <Menu mode={props.mode}>\n        <Menu.Item key=\"mail\">\n          <a href=\"/login\">Signin</a>\n        </Menu.Item>\n        <Menu.Item key=\"app\">\n          <a href=\"/register\">Signup</a>\n        </Menu.Item>\n      </Menu>\n    )\n  } else {\n    return (\n      <Menu mode={props.mode}>\n        <Menu.Item key=\"logout\">\n          <a onClick={logoutHandler}>Logout</a>\n        </Menu.Item>\n      </Menu>\n    )\n  }\n}\n\nexport default withRouter(RightMenu);\n\n","import React, { useState } from 'react';\nimport LeftMenu from './Sections/LeftMenu';\nimport RightMenu from './Sections/RightMenu';\nimport { Drawer, Button, Icon } from 'antd';\nimport './Sections/Navbar.css';\n\nfunction NavBar() {\n  const [visible, setVisible] = useState(false)\n\n  const showDrawer = () => {\n    setVisible(true)\n  };\n\n  const onClose = () => {\n    setVisible(false)\n  };\n\n  return (\n    <nav className=\"menu\" style={{ position: 'fixed', zIndex: 5, width: '100%' }}>\n      <div className=\"menu__logo\">\n        <a href=\"/\">Logo</a>\n      </div>\n      <div className=\"menu__container\">\n        <div className=\"menu_left\">\n          <LeftMenu mode=\"horizontal\" />\n        </div>\n        <div className=\"menu_rigth\">\n          <RightMenu mode=\"horizontal\" />\n        </div>\n        <Button\n          className=\"menu__mobile-button\"\n          type=\"primary\"\n          onClick={showDrawer}\n        >\n          <Icon type=\"align-right\" />\n        </Button>\n        <Drawer\n          title=\"Basic Drawer\"\n          placement=\"right\"\n          className=\"menu_drawer\"\n          closable={false}\n          onClose={onClose}\n          visible={visible}\n        >\n          <LeftMenu mode=\"inline\" />\n          <RightMenu mode=\"inline\" />\n        </Drawer>\n      </div>\n    </nav>\n  )\n}\n\nexport default NavBar","import React from 'react'\nimport {Icon} from 'antd';\n\nfunction Footer() {\n    return (\n        <div style={{\n            height: '80px', display: 'flex',\n            flexDirection: 'column', alignItems: 'center',\n            justifyContent: 'center', fontSize:'1rem'\n        }}>\n           <p> Happy Coding  <Icon type=\"smile\" /></p>\n        </div>\n    )\n}\n\nexport default Footer\n","import React, { Suspense } from 'react';\nimport { Route, Switch } from \"react-router-dom\";\nimport Auth from \"../hoc/auth\";\n// pages for this product\nimport LandingPage from \"./views/LandingPage/LandingPage.js\";\nimport LoginPage from \"./views/LoginPage/LoginPage.js\";\nimport RegisterPage from \"./views/RegisterPage/RegisterPage.js\";\nimport NavBar from \"./views/NavBar/NavBar\";\nimport Footer from \"./views/Footer/Footer\"\n\nfunction App() {\n  return (\n    <Suspense fallback={(<div>Loading...</div>)}>\n      <NavBar />\n      <div style={{ paddingTop: '69px', minHeight: 'calc(100vh - 80px)' }}>\n        <Switch>\n          <Route exact path=\"/\" component={Auth(LandingPage, null)} />\n          <Route exact path=\"/login\" component={Auth(LoginPage, false)} />\n          <Route exact path=\"/register\" component={Auth(RegisterPage, false)} />\n        </Switch>\n      </div>\n      <Footer />\n    </Suspense>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {\n    LOGIN_USER,\n    REGISTER_USER,\n    AUTH_USER,\n    LOGOUT_USER,\n} from '../_actions/types';\n \n\nexport default function(state={},action){\n    switch(action.type){\n        case REGISTER_USER:\n            return {...state, register: action.payload }\n        case LOGIN_USER:\n            return { ...state, loginSucces: action.payload }\n        case AUTH_USER:\n            return {...state, userData: action.payload }\n        case LOGOUT_USER:\n            return {...state }\n        default:\n            return state;\n    }\n}","import { combineReducers } from 'redux';\nimport user from './user_reducer';\n\nconst rootReducer = combineReducers({\n    user,\n});\n\nexport default rootReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from \"react-router-dom\";\n\nimport Reducer from './_reducers';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport promiseMiddleware from 'redux-promise';\nimport ReduxThunk from 'redux-thunk';\n\nconst createStoreWithMiddleware = applyMiddleware(promiseMiddleware, ReduxThunk)(createStore);\n\nReactDOM.render(\n    <Provider\n        store={createStoreWithMiddleware(\n            Reducer,\n            window.__REDUX_DEVTOOLS_EXTENSION__ &&\n            window.__REDUX_DEVTOOLS_EXTENSION__()\n        )}\n    >\n        <BrowserRouter>\n            <App />\n        </BrowserRouter>\n    </Provider>\n    , document.getElementById('root'));\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}